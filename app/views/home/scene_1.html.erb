<!DOCTYPE html>
<html lang="ja">



<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <%= csrf_meta_tags %>  <!-- CSRFトークンをmetaタグとして埋め込む -->
    <%= stylesheet_link_tag 'scene_1', media: 'all', 'data-turbolinks-track': 'reload'%>
    <title>恋愛面接</title>
</head>

<body>
    <div class="canvas_wrapper_scene_1">
        <div class = "background">
            <canvas id="BackgroundCanvas" width="921px" height="519px" style="background-color: #D9D9D9;"></canvas>
        </div>

        <div class = "game_background">
            <canvas id="GameBackgroundCanvas" width="921px" height="519px"></canvas>
        </div>

        <div class = "character">
            <canvas id="CharacterCanvas_scene_1" width="921px" height="519px"></canvas>
        </div>

        <div class="message_window">
            <canvas id="MessageWindowCanvas" width="921px" height="519px"></canvas>
            <div class="message-box">メッセージウィンドウ</div>
        </div>

        <div class="input_window_scene_1">

            <form action="/home/index" method="post"  id="NameInputForm" class="name_input_form" accept-charset="UTF-8" >
                <input name="authenticity_token" type="hidden" value="<%= form_authenticity_token %>" />
                <input name="user_input_name[username]" id="NameInput" placeholder='名前を入力してください' type="text" />
                <canvas id="InputNameCanvas" width="921px" height="519px"></canvas>
            </form>

            <form id = "StartButtonForm" class="start_button_form">
                <input type="button" id="StartButton" value="はじめから" />
            </form>

            <form action="/home/scene_1" method="post" id="InputForm" class="input_form" accept-charset="UTF-8" >
                <input name="authenticity_token" type="hidden" value="<%= form_authenticity_token %>" />
                <input name="user_input_message[input]" id="MessageInput" placeholder='返答を記入してください' type="text" />
                <input name="user_input_message[q_id]" id="Q_id" type="hidden" value="{q_id の値}"/>
                <canvas id="InputWindowCanvas_scene_1" width="921px" height="519px"></canvas>
            </form>
            <%# data-turbo="ture" action="/home/scene_1" method="post" %>

            <form id="ClicButton" class="clic_butom">
                <input name="authenticity_token" type="hidden" value="<%= form_authenticity_token %>" />
                <input type="button" id="Select1" />
                <input type="button" id="Select2" />
            </form> 

            <form id="FinishButton" class="finish_butom">
                <input type="button" id="Finish" />
            </form>          
        </div>

        <p id = 'target_1'> ああ</p>
        <p id = 'target_2'> ああ</p>
        <p id = 'target_3'> ああ</p>
        <%# <p id = 'target_4'> ああ</p> %>
    </div>

    <script>
        //= require jquery
        //= require jquery_ujs
        document.addEventListener('DOMContentLoaded', () => {
            const token = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

            var input_name_canvas = document.getElementById('InputNameCanvas');
            var background_canvas = document.getElementById('BackgroundCanvas');
            var game_background_canvas = document.getElementById('GameBackgroundCanvas');
            var character_canvas = document.getElementById('CharacterCanvas_scene_1');
            var message_window_canvas = document.getElementById('MessageWindowCanvas');
            var input_window_canvas = document.getElementById('InputWindowCanvas_scene_1');
            var scene_count = -1;
            var Current_MessageIndex = 0;
            var manner_point = 0;
            var girl_face_number = 0;

            var start_Flag = false;
            // var enterFlag = false;

            // 確認用
            var Sc = scene_count.toString();
            document.getElementById('target_1').textContent = Sc;
            var Mp = manner_point.toString();
            document.getElementById('target_2').textContent = Mp;
            var Gfn = girl_face_number.toString();
            document.getElementById('target_3').textContent = Gfn;

            // document.getElementById('target_4').textContent = jQuery.fn.jquery;

            // 画面に下部の手動機構
            const  name_input = document.getElementById('NameInputForm')
            const  start_button = document.getElementById('StartButtonForm')
            const  input_txet = document.getElementById('InputForm') 
            const  input_button = document.getElementById('ClicButton')
            const  finish_button = document.getElementById('FinishButton')
            name_input.style.visibility = 'visible';
            // name_input.style.visibility = 'hideen';
            start_button.style.visibility = 'hidden';
            // start_button.style.visibility = 'visible';
            input_txet.style.visibility = 'hidden'; 
            // input_txet.style.visibility = 'visible'; 
            input_button.style.visibility = 'hidden';
            finish_button.style.visibility = 'hidden';

            // image配列
            var girl_face = [
                            '<%= asset_path("/girl_normal.png") %>',
                            '<%= asset_path("/girl_smile.png") %>',
                            '<%= asset_path("/girl_angry.png") %>'
            ]

            var background_images = [
                                    '<%= asset_path("/title.png") %>',
                                    '<%= asset_path("/game_background_scene1.png") %>',
                                    '<%= asset_path("/game_background_scene2.png") %>',
                                    '<%= asset_path("/ending_happy.png") %>'
            ]

            // 画像のPathを初期化
            var selectedGirlFaceImagePath = girl_face[0];
            var selectedBackgroundImagePath = background_images[0];

            function change_canvas (val) {
                itemInstance.setValue(val);
                itemInstance.change_game_background(val);
                itemInstance.change_input_window(val);
                itemInstance.change_charcter_window(val);
                itemInstance.change_message(val);
            }

            var Item = function (val) {
                this._scene_count = val;
            }
            
            Item.prototype.setValue = function (val) {
                this._scene_count = val;
            }

            let itemInstance = new Item(scene_count);

            document.getElementById('NameInputForm').addEventListener('submit', function(event) {
                // event.preventDefault();

                // setTimeout(1000);
                scene_count =  0;
                itemInstance.SceneCount(scene_count);
                itemInstance.ManaerPint(scene_count);
                itemInstance.GirlFaceNumber(scene_count);
                change_canvas(scene_count);
            });

            document.getElementById('StartButton').addEventListener('click', function(event) {
                event.preventDefault();

                scene_count ++;
                change_canvas(scene_count);
            });

            document.getElementById('Select1').addEventListener('click', function(event) {
                event.preventDefault();

                // 選択肢のチョイス
                if (scene_count === 5){
                    manner_point += 2;
                    girl_face_number = 1;
                    // setTimeout(500);
                }
                if (scene_count === 13){
                    scene_count += 2;
                    Current_MessageIndex += 4;
                    girl_face_number = 2;
                    input_button.style.visibility = 'hidden';
                    if (manner_point > 2) {
                        manner_point -= 2;
                    }
                }
                if (scene_count === 30){        
                    manner_point += 3;
                    girl_face_number = 1;
                }

                scene_count +=  1;
                start_Flag = false;
                // setTimeout(500);
                change_canvas(scene_count);
                // start_Flag = false;
            });

            document.getElementById('Select2').addEventListener('click', function(event) {
                event.preventDefault();
                // scene_count +=  1;
                // $( function() {
                //     $.ajax({
                //         url: '/home/q_id',  
                //         type: 'POST',
                //         dataType: 'html',
                //         async: true,
                //         data: {
                //         q_id: "1",
                //         },
                //     });
                // })

                if (scene_count === 9){
                    manner_point += 2;
                    girl_face_number = 1;
                }
                else if (scene_count === 13){
                    manner_point += 3;
                    girl_face_number = 1;
                }
                else if (scene_count === 13){
                    manner_point += 3;
                    girl_face_number = 1;
                }
                else if (scene_count === 30){
                    if (manner_point > 1) {
                        manner_point -= 1;
                    }
                    girl_face_number = 2;
                }

                scene_count +=  1;
                start_Flag = false;
                // setTimeout(500);
                change_canvas(scene_count);
            });

            document.getElementById('InputForm').addEventListener('submit', function(event) {
                // event.preventDefault();
                // console.log("イベント発火！") // 追加
                // if (scene_count === 16){   
                //     console.log("API 送信！") // 追加
                //     $.ajax({
                //         url: '/home/q_id',  
                //         type: 'POST',
                //         dataType: 'json',
                //         async: true,
                //         data: {
                //             q_id: 1,
                //         },
                //     });
                // }
                // $.ajax({
                //     url: '/home/scene_1',  
                //     type: 'POST',
                //     dataType: 'json',
                //     async: true,
                //     data: {
                //     // 必要なパラメータ
                //     },
                // });
                
                if (scene_count === 16){   
                    document.getElementById('Q_id').value = "1"
                }
                else if (scene_count === 19){   
                    document.getElementById('Q_id').value = "2"
                }
                else if (scene_count === 22){   
                    document.getElementById('Q_id').value = "3"
                }
                else if (scene_count === 26){   
                    document.getElementById('Q_id').value = "4"
                }



                // $.ajax({
                //     url: '/home/q_id',  
                //     type: 'POST',
                //     dataType: 'html',
                //     async: true,
                //     data: {
                //     q_id: 1,
                //     },
                // });
                
                scene_count +=  1;
                start_Flag = false;
                // document.getElementById('message_input').value;
                change_canvas(scene_count);
            });

            document.addEventListener('keydown', function (event) {
                // vent.preventDefault();
                if (start_Flag === true) {
                    if (event.key === ' ') {
                        scene_count +=  0.5;
                        change_canvas(scene_count);
                        girl_face_number = 0;
                        itemInstance.SceneCount(scene_count);
                        itemInstance.ManaerPint(scene_count);
                        itemInstance.GirlFaceNumber(scene_count);
                        // start_Flag = false;
                    }
                }
                else if (start_Flag === false) {
                    if (event.key === ' ') {
                        change_canvas(scene_count);
                        girl_face_number = 0;
                        itemInstance.SceneCount(scene_count);
                        itemInstance.ManaerPint(scene_count);
                        itemInstance.GirlFaceNumber(scene_count);
                        start_Flag = true;
                    }
                }
            });

            document.getElementById('Finish').addEventListener('click', () => {
                //  localStorageを用いて他のファイルの変数を持ってきてgamescoreへ代入しています。
                // $.ajax({
                //     url: '/home/db',  
                //     type: 'POST',
                //     dataType: 'html',
                //     async: true,
                //     data: {
                //     manner_point: manner_point,
                //     },
                // });
                window.location.href = "/home/fb";
            });

            Item.prototype.SceneCount = function (scene_count) {
                Sc = scene_count.toString();
                document.getElementById('target_1').textContent = Sc
            }
            Item.prototype.ManaerPint = function (scene_count) {
                Mp = manner_point.toString();
                document.getElementById('target_2').textContent = Mp
            }
            Item.prototype.GirlFaceNumber = function (scene_count) {
                Gfn = girl_face_number.toString();
                document.getElementById('target_3').textContent = Gfn
            }

            if (background_canvas) {
                // var background_ctx = background_canvas.getContext('2d');
            }

            if (game_background_canvas) {
                var game_background_ctx = game_background_canvas.getContext('2d');

                // Canvasのサイズを設定
                game_background_canvas.width = game_background_canvas.offsetWidth;
                game_background_canvas.height = game_background_canvas.offsetHeight;

                // 背景画像を描画
                var game_background_img = new Image();
                game_background_img.src = selectedBackgroundImagePath;  // 背景画像のパスを指定
                game_background_img.onload = function() {
                    game_background_ctx.drawImage(game_background_img, 136, 26, 648, 365);
                }

                Item.prototype.change_game_background = function (scene_count) {
                    // event.preventDefault();

                    if (scene_count === 1) {
                        // 背景のPathを1へ
                        selectedBackgroundImagePath = background_images[1];

                        game_background_img.src = selectedBackgroundImagePath; 
                        game_background_img.onload = function() {
                            game_background_ctx.clearRect(0, 0, game_background_canvas.width, game_background_canvas.height);
                            game_background_ctx.drawImage(game_background_img, 136, 26, 648, 365);
                        }
                    }
                    else if (scene_count === 9) {
                        // 背景のPathを2へ
                        selectedBackgroundImagePath = background_images[2];

                        game_background_img.src = selectedBackgroundImagePath; // 変更後の画像パス
                        game_background_img.onload = function() {
                            game_background_ctx.clearRect(0, 0, game_background_canvas.width, game_background_canvas.height);
                            game_background_ctx.drawImage(game_background_img, 136, 26, 648, 365);
                        }
                    }
                    if (scene_count === 34) {
                        // 背景のPathを1へ
                        selectedBackgroundImagePath = background_images[1];

                        game_background_img.src = selectedBackgroundImagePath; 
                        game_background_img.onload = function() {
                            game_background_ctx.clearRect(0, 0, game_background_canvas.width, game_background_canvas.height);
                            game_background_ctx.drawImage(game_background_img, 136, 26, 648, 365);
                        }
                    }
                    // エンディングへ
                    else if (scene_count === 35) {
                        /// 背景のPathを3へ
                        selectedBackgroundImagePath = background_images[3];

                        game_background_img.src = selectedBackgroundImagePath; // 変更後の画像パス
                        game_background_img.onload = function() {
                            game_background_ctx.clearRect(0, 0, game_background_canvas.width, game_background_canvas.height);
                            game_background_ctx.drawImage(game_background_img, 136, 26, 648, 365);
                        }
                    }
                }
            }

            if (character_canvas) {
                var character_ctx = character_canvas.getContext('2d');

                // Canvasのサイズを設定
                character_canvas.width = character_canvas.offsetWidth;
                character_canvas.height = character_canvas.offsetHeight;
                // var character_img = new Image(); // 背景画像のパスを指定
                // selectedGirlFaceImagePath = girl_face[girl_face_number];
                // character_img.src = selectedGirlFaceImagePath; 
                // character_ctx.drawImage(character_img, 362, 70, 238, 228);
                var character_img = new Image(); // 背景画像のパスを指定

                Item.prototype.change_charcter_window = function (scene_count) {
                    // event.preventDefault();
                    
                    // selectedGirlFaceImagePath = girl_face[girl_face_number];
                    // character_img.src = selectedGirlFaceImagePath; 

                    function drawCharacter(imagePath) {
                        character_img.src = imagePath;
                        character_img.onload = function() {
                            character_ctx.clearRect(0, 0, character_canvas.width, character_canvas.height);
                            character_ctx.drawImage(character_img, 362, 70, 238, 228);
                        }
                    }

                    
                    // if (scene_count === 2) {
                    //     // character_ctx.clearRect(0, 0, 921, 519);
                    //     var selectedGirlFaceImagePath = girl_face[girl_face_number];
                    //     drawCharacter(selectedGirlFaceImagePath);
                        
                    //     // character_img.src = selectedGirlFaceImagePath; 
                    //     // character_ctx.drawImage(character_img);
                    // }
                    // else if (scene_count === 3) {
                    //     character_ctx.clearRect(0, 0, 921, 519);
                    // }
                    // else if (scene_count === 6) {
                    //     // character_ctx.clearRect(0, 0, 921, 519);
                    //     // selectedGirlFaceImagePath = girl_face[girl_face_number];
                    //     // character_img.src = selectedGirlFaceImagePath; 
                    //     // character_ctx.drawImage(character_img, 362, 70, 238, 228);
                    //     var selectedGirlFaceImagePath = girl_face[girl_face_number];
                    //     drawCharacter(selectedGirlFaceImagePath);
                    // }
                    // if (scene_count === 10) {
                    //     // var character_img = new Image(); // 背景画像のパスを指定
                    //     var number = girl_face_number
                    //     selectedGirlFaceImagePath = girl_face[number];
                    //     character_img.src = selectedGirlFaceImagePath; 
                    //     setTimeout(500);
                    //     character_ctx.drawImage(character_img, 362, 70, 238, 228);
                    // }
                    if (9 < scene_count) {
                        var selectedGirlFaceImagePath = girl_face[girl_face_number];
                        drawCharacter(selectedGirlFaceImagePath);
                    }
                    // エンディングへ
                    // else if (scene_count === 35) {
                    //     character_ctx.clearRect(0, 0, 921, 519);
                    // }
                }
            }

            if (message_window_canvas) {
                // let Current_MessageIndex = 0;
                var enterFlag = false;
                var title_messages = ["恋愛面接", "～恋と内定の行方～"];

                var message_window_ctx = message_window_canvas.getContext('2d');

                // Canvasの設定
                message_window_canvas.width = message_window_canvas.offsetWidth;
                message_window_canvas.height = message_window_canvas.offsetHeight;
                message_window_ctx.fillStyle = "rgb(213, 67, 216)";
                message_window_ctx.font = '20px sans-serif';
                var message_window_img = new Image();
                message_window_img.src = '<%= asset_path("/messagewindow_v2.png") %>';

                // 各行の位置を計算
                var textHeight = 40; // フォントサイズに合わせて調整
                var lineHeight = textHeight + 10; // 行間を調整

                // テキストの幅を計算し、各行の中心位置を計算
                title_messages.forEach((title_message, index) => {
                    if (index === 0){
                        message_window_ctx.font = "80px SeoulNamsan";
                        var textMetrics = message_window_ctx.measureText(title_message);
                        var textWidth = textMetrics.width;                    
                        var x = 300 
                        var y = 330 - ((title_messages.length - 1) * lineHeight / 2) + (index * lineHeight) + textHeight / 2;
                    
                        message_window_ctx.fillText(title_message, x, y);
                    }
                    else if (index === 1){
                        message_window_ctx.font = "48px SeoulNamsan";
                        var textMetrics = message_window_ctx.measureText(title_message);
                        var textWidth = textMetrics.width;                    
                        var x = 300 - (textWidth / 8);
                        var y = 330 - ((title_messages.length - 1) * lineHeight / 2) + (index * lineHeight) + textHeight / 2;
                    
                        message_window_ctx.fillText(title_message, x, y);
                    }
                    
                });

                function fetchMessages() {
                    let TextMessages = []
                    fetch('/huckson_story.txt')
                        .then(response => response.text())
                        .then(data => {
                            const lines = data.split('\n');
                            lines.forEach(line => {
                                const [name, message] = line.split('：');
                                TextMessages.push({ name, message });
                            });
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                    return TextMessages;
                }

                function wrapText(context, text, maxWidth) {
                    var lines = [];
                    var currentLine = '';
                    for (var i = 0; i < text.length; i++) {
                        var char = text[i];
                        var testLine = currentLine + char;
                        var width = context.measureText(testLine).width;
                        if (width > maxWidth && currentLine !== '') {
                            lines.push(currentLine);
                            currentLine = char;
                        } else {
                            currentLine = testLine;
                        }
                    }
                    lines.push(currentLine);
                    return lines;
                }
                
                function displayMessage(name, message) {
                    var TextHeight = 20;
                    message_window_ctx.font = "16px SeoulNamsan";

                    message_window_ctx.fillText(name, 200 + 20, 249 + 40);

                    var maxWidth = 550 - 40;
                    var wrappedText = wrapText(message_window_ctx, message, maxWidth);

                    var charIndex = 0;
                    var lineIndex = 0;

                    var x = 200 + 15;
                    var y = 249 + 69;

                    function drawNextChar() {
                        if (lineIndex < wrappedText.length) {
                            if (charIndex < wrappedText[lineIndex].length) {
                                message_window_ctx.fillText(wrappedText[lineIndex][charIndex], x, y);
                                charIndex++;
                                x += message_window_ctx.measureText(wrappedText[lineIndex][charIndex - 1]).width;
                                setTimeout(drawNextChar, 30); // 30ミリ秒ごとに次の文字を描画
                            } else {
                                charIndex = 0;
                                lineIndex++;
                                x = 201 + 15;
                                y += TextHeight;
                                setTimeout(drawNextChar, 30);
                            }
                        }
                    }
                    drawNextChar();
                }
                
                function simulateSpaceKey() {
                    const event = new KeyboardEvent('keydown', {
                        key: ' ', // スペースキーのキー値
                        keyCode: 32, // スペースキーのキーコード
                        code: 'Space', // スペースキーのコード
                        which: 32, // スペースキーのwhich値
                        shiftKey: false,
                        ctrlKey: false,
                        metaKey: false
                    });
                    document.dispatchEvent(event);
                }

                let text_messages = fetchMessages();

                function drawMessage (currentMessageIndex, Name, Message) {
                    enterFlag = !enterFlag;
            
                    if (currentMessageIndex < text_messages.length) {
                        displayMessage(Name,Message);
                    } 
                    else {
                    console.log('No more messages.');
                    }

                    if (enterFlag) {
                        simulateSpaceKey();
                    }
                }  

                Item.prototype.change_message = function (scene_count) {
                    // event.preventDefault();
                    // this._scene_count = scene_count;

                    if (scene_count === 1) {
                        message_window_ctx.clearRect(0, 0, message_window_canvas.width, message_window_canvas.height);
                        message_window_ctx.drawImage(message_window_img, 201, 263);
                        message_window_ctx.fillStyle = 'black';
                    
                        drawMessage(Current_MessageIndex, text_messages[Current_MessageIndex].name,text_messages[Current_MessageIndex].message);
                        Current_MessageIndex += 1;
                        
                        // simulateSpaceKey();
                    }
                    else if (1 < scene_count) {
                        message_window_ctx.clearRect(0, 0, message_window_canvas.width, message_window_canvas.height);
                        message_window_ctx.drawImage(message_window_img, 201, 263);
                        
                        drawMessage(Current_MessageIndex, text_messages[Current_MessageIndex].name,text_messages[Current_MessageIndex].message);
                        Current_MessageIndex += 1;
                    }
                    // // エンディングへ
                    // else if (scene_count === 20) {
                    // }
                }
            }

            if (input_window_canvas) {
                var input_window_ctx = input_window_canvas.getContext('2d');

                // Canvasのサイズを設定
                input_window_canvas.width = input_window_canvas.offsetWidth;
                input_window_canvas.height = input_window_canvas.offsetHeight;

                Item.prototype.change_input_window = function (scene_count) {
                    if (scene_count === 0) {
                        start_button.style.visibility = 'visible';
                        name_input.style.visibility = 'hidden';
                    }

                    if (scene_count === 1) {
                        start_button.style.visibility = 'hidden';
                    }
                    else if (scene_count === 5) {
                        document.getElementById('Select1').value = "3回ノックする"
                        document.getElementById('Select2').value = "2回ノックする"
                        input_button.style.visibility = 'visible';
                    }
                    else if (scene_count === 6) {
                        input_button.style.visibility = 'hidden';
                        // input_txet.style.visibility = 'visible';
                    }
                    else if (scene_count === 9) {
                        document.getElementById('Select1').value = "ドアを後ろ手で閉める"
                        document.getElementById('Select2').value = "ドアに向き直して閉める"
                        input_button.style.visibility = 'visible';
                    }
                    else if (scene_count === 10) {
                        input_button.style.visibility = 'hidden';
                        // input_txet.style.visibility = 'visible';
                    }

                    else if (scene_count === 13) {
                        document.getElementById('Select1').value = "椅子に座る"
                        document.getElementById('Select2').value = "椅子の横に立ったまま"
                        input_button.style.visibility = 'visible';
                    }
                    else if (scene_count === 14) {
                        input_button.style.visibility = 'hidden';
                        // input_txet.style.visibility = 'visible';
                    }
                    // 自己紹介
                    else if (scene_count === 16 ) {
                        // input_button.style.visibility = 'hidden';
                        document.getElementById('MessageInput').value = "";
                        input_txet.style.visibility = 'visible';
                    }
                    else if (scene_count === 17 ) {
                        // input_button.style.visibility = 'hidden';
                        input_txet.style.visibility = 'hidden';
                        // document.getElementById('message_input').value = "";
                    }
                    // 志望動機
                    else if (scene_count === 19 ) {
                        // input_button.style.visibility = 'hidden';
                        // 15
                        document.getElementById('MessageInput').value = "";
                        input_txet.style.visibility = 'visible';
                    }
                    else if (scene_count === 20 ) {
                        // input_button.style.visibility = 'hidden';
                        input_txet.style.visibility = 'hidden';
                        // document.getElementById('message_input').value = "";
                    }
                    // ガクチカ
                    else if (scene_count === 22 ) {
                        // input_button.style.visibility = 'hidden';
                        // 15
                        document.getElementById('MessageInput').value = "";
                        input_txet.style.visibility = 'visible';
                    }
                    else if (scene_count === 23 ) {
                        // input_button.style.visibility = 'hidden';
                        input_txet.style.visibility = 'hidden';
                        // document.getElementById('message_input').value = "";
                    }
                    // あなたの強み
                    else if (scene_count === 26 ) {
                        // input_button.style.visibility = 'hidden';
                        // 15
                        document.getElementById('MessageInput').value = "";
                        input_txet.style.visibility = 'visible';
                    }
                    else if (scene_count === 27 ) {
                        // input_button.style.visibility = 'hidden';
                        input_txet.style.visibility = 'hidden';
                        // document.getElementById('message_input').value = "";
                    }
                    else if (scene_count === 30) {
                        document.getElementById('Select1').value = "椅子から立ってお礼を言う"
                        document.getElementById('Select2').value = "椅子に座ったままお礼を言う"
                        input_button.style.visibility = 'visible';
                    }

                    else if (scene_count === 31) {
                        input_button.style.visibility = 'hidden';
                        // input_txet.style.visibility = 'visible';
                    }

                    else if (scene_count === 35) {
                        finish_button.style.visibility = 'visible';
                        // input_txet.style.visibility = 'visible';
                    }
                    // else if (scene_count === 16 ) {
                    //     // input_button.style.visibility = 'hidden';
                    //     input_txet.style.visibility = 'hidden';
                    // }
                    // // エンディングへ
                    // else if (scene_count === 3) {
                    //     input_button.style.visibility = 'hidden';
                    //     input_txet.style.visibility = 'visible';
                    // }
                }
            }
        });
    </script>
</body>

</html>
