<!DOCTYPE html>
<html lang="ja">
<%= stylesheet_link_tag 'scene_1', media: 'all', 'data-turbolinks-track': 'reload'%>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>恋愛面接</title>
</head>

<body>
    <div class="canvas_wrapper_scene_1">
        <div class = "background">
            <canvas id="BackgroundCanvas" width="921px" height="519px" style="background-color: #D9D9D9;"></canvas>
        </div>

        <div class = "gameBackground">
            <canvas id="GameBackgroundCanvas" width="921px" height="519px"></canvas>
        </div>

        <div class = "character">
            <canvas id="CharacterCanvas_scene_1" width="921px" height="519px"></canvas>
        </div>

        <div class="message-window">
            <canvas id="MessageWindowCanvas" width="921px" height="519px"></canvas>
            <div class="message-box">メッセージウィンドウ</div>
        </div>

        <div class="input_window_scene_1">

            <form class="StartButton" id = "startbutton">
                <button class="start_button" id="start_Button">はじめから</button>
            </form>

            <form class="input_form" id="InputForm">
                <input id="message_input" placeholder='返答を記入してください' required>
                <canvas id="InputWindowCanvas_scene_1" width="921px" height="519px"></canvas>
            </form>

            <form class="clicbutom" id="clicButton">
                <button id="select_1">選択肢1</button>
                <button id="select_2">選択肢2</button> 
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            var background_canvas = document.getElementById('BackgroundCanvas');
            var game_background_canvas = document.getElementById('GameBackgroundCanvas');
            var character_canvas = document.getElementById('CharacterCanvas_scene_1');
            var message_window_canvas = document.getElementById('MessageWindowCanvas');
            var input_window_canvas = document.getElementById('InputWindowCanvas_scene_1');
            var scene_count = 0;

            // 画面に下部の手動機構
            const  start_button = document.getElementById('startbutton')
            const  input_txet = document.getElementById('InputForm') 
            const  input_button = document.getElementById('clicButton')
            start_button.style.visibility = 'visible';
            input_txet.style.visibility = 'hidden'; 
            input_button.style.visibility = 'hidden';

            // image配列
            var girl_face = [
                                    '<%= asset_path("/girl_normal.png") %>',
                                    '<%= asset_path("/girl_smile.png") %>',
                                    '<%= asset_path("/girl_angry.png") %>'
            ];

            var background_images = [
                                    '<%= asset_path("/title.png") %>',
                                    '<%= asset_path("/game_background_scene1.png") %>',
                                    '<%= asset_path("/game_background_scene2.png") %>',
                                    '<%= asset_path("/ending_happy.png") %>',
            ]

            // 画像のPathを初期化
            var selectedGirlFaceImagePath = girl_face[0];
            var selectedBackgroundImagePath = background_images[0];

            // image表示関数
            function drawImageOnCanvas(canvas, imageSrc, x, y, width, height) {
                var ctx = canvas.getContext('2d');
                var img = new Image();
                img.src = imageSrc;
                img.onload = function() {
                    ctx.clearRect(0, 0, canvas.width, canvas.height);
                    ctx.drawImage(img, x, y, width, height);
                }
            }

            function change_image (val) {
                itemInstance.setValue(val);
                itemInstance.change_game_background(val);
                itemInstance.change_charcter_window(val);
                itemInstance.change_message_window(val);
                itemInstance.change_input_window(val);
            }

            var Item = function (val) {
                this._scene_count = val;
            }
            
            Item.prototype.setValue = function (val) {
                this._scene_count = val;
            }

            let itemInstance = new Item(scene_count);


            document.getElementById('start_Button').addEventListener('click', function(event) {
                event.preventDefault();
                scene_count++;
                change_image(scene_count);
            });

            document.getElementById('select_1').addEventListener('click', function(event) {
                event.preventDefault();
                scene_count++;
                change_image(scene_count);
            });

            document.getElementById('InputForm').addEventListener('submit', function(event) {
                event.preventDefault();
                scene_count++;
                change_image(scene_count);
            });

            document.addEventListener('keydown', function (event) {
                if (event.key === 'Enter') {
                    scene_count++;
                }
            });


            if (background_canvas) {
                var background_ctx = background_canvas.getContext('2d');
            }

            if (game_background_canvas) {
                var game_background_ctx = game_background_canvas.getContext('2d');

                // Canvasのサイズを設定
                game_background_canvas.width = game_background_canvas.offsetWidth;
                game_background_canvas.height = game_background_canvas.offsetHeight;

                // 背景画像を描画
                var game_background_img = new Image();
                game_background_img.src = selectedBackgroundImagePath;  // 背景画像のパスを指定
                game_background_img.onload = function() {
                    game_background_ctx.drawImage(game_background_img, 136, 26, 648, 365);
                }

                Item.prototype.change_game_background = function (scene_count) {
                    event.preventDefault();

                    if (scene_count === 1) {
                        // 背景のPathを1へ
                        selectedBackgroundImagePath = background_images[1];

                        game_background_img.src = selectedBackgroundImagePath; 
                        game_background_img.onload = function() {
                            game_background_ctx.clearRect(0, 0, game_background_canvas.width, game_background_canvas.height);
                            game_background_ctx.drawImage(game_background_img, 136, 26, 648, 365);
                        }
                    }
                    else if (scene_count === 2) {
                        // 背景のPathを2へ
                        selectedBackgroundImagePath = background_images[2];

                        game_background_img.src = selectedBackgroundImagePath; // 変更後の画像パス
                        game_background_img.onload = function() {
                            game_background_ctx.clearRect(0, 0, game_background_canvas.width, game_background_canvas.height);
                            game_background_ctx.drawImage(game_background_img, 136, 26, 648, 365);
                        }
                    }
                    // エンディングへ
                    else if (scene_count === 3) {
                        /// 背景のPathを3へ
                        selectedBackgroundImagePath = background_images[3];

                        game_background_img.src = selectedBackgroundImagePath; // 変更後の画像パス
                        game_background_img.onload = function() {
                            game_background_ctx.clearRect(0, 0, game_background_canvas.width, game_background_canvas.height);
                            game_background_ctx.drawImage(game_background_img, 136, 26, 648, 365);
                        }
                    }
                }
            }

            if (character_canvas) {
                var character_ctx = character_canvas.getContext('2d');

                // Canvasのサイズを設定
                character_canvas.width = character_canvas.offsetWidth;
                character_canvas.height = character_canvas.offsetHeight;

                document.getElementById('select_1').addEventListener('click', function(event) {
                    event.preventDefault();

                    // 背景画像を描画
                    var character_img = new Image();
                    character_img.src = selectedGirlFaceImagePath;  // 背景画像のパスを指定
                    character_img.onload = function() {
                        character_ctx.drawImage(character_img, 362, 70, 238, 228);
                    }
                });

                Item.prototype.change_charcter_window = function (scene_count) {
                    event.preventDefault();

                    if (scene_count === 1) {
                    }
                    else if (scene_count === 2) {
                    }
                    // エンディングへ
                    else if (scene_count === 3) {
                        character_ctx.clearRect(0, 0, 921, 519);
                    }
                }
            }

            // テキスト入力無し
            if (message_window_canvas) {
                function wrapText(context, text, maxWidth) {
                    var lines = [];
                    var currentLine = '';
                    for (var i = 0; i < text.length; i++) {
                        var char = text[i];
                        var testLine = currentLine + char;
                        var width = context.measureText(testLine).width;
                        if (width > maxWidth && currentLine !== '') {
                            lines.push(currentLine);
                            currentLine = char;
                        } else {
                            currentLine = testLine;
                        }
                    }
                    lines.push(currentLine);
                    return lines;
                }
                
                function displayMessage(name, message) {
                    message_window_ctx.font = '20px sans-serif';
                    message_window_ctx.fillStyle = 'black';
                    var textHeight = 20;

                    message_window_ctx.fillText(name, 200 + 20, 249 + 40);

                    message_window_ctx.font = "16px SeoulNamsan";
                    var maxWidth = 550 - 40;
                    var wrappedText = wrapText(message_window_ctx, message, maxWidth);

                    var charIndex = 0;
                    var lineIndex = 0;

                    var x = 200 + 15;
                    var y = 249 + 69;

                    function drawNextChar() {
                        if (lineIndex < wrappedText.length) {
                            if (charIndex < wrappedText[lineIndex].length) {
                                message_window_ctx.fillText(wrappedText[lineIndex][charIndex], x, y);
                                charIndex++;
                                x += message_window_ctx.measureText(wrappedText[lineIndex][charIndex - 1]).width;
                                setTimeout(drawNextChar, 30); // 30ミリ秒ごとに次の文字を描画
                            } else {
                                charIndex = 0;
                                lineIndex++;
                                x = 201 + 15;
                                y += textHeight;
                                setTimeout(drawNextChar, 30);
                            }
                        }
                    }
                    drawNextChar();
                }

                function fetchMessages() {
                    fetch('/huckson_test_story.txt')
                        .then(response => response.text())
                        .then(data => {
                            const lines = data.split('\n');
                            lines.forEach(line => {
                                const [name, message] = line.split('：');
                                text_messages.push({ name, message });
                            });
                            displayMessage(text_messages[currentMessageIndex].name, text_messages[currentMessageIndex].message);
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                }

                function simulateEnterKey() {
                    const event = new KeyboardEvent('keydown', {
                        key: 'Enter',
                        keyCode: 13,
                        code: 'Enter',
                        which: 13,
                        shiftKey: false,
                        ctrlKey: false,
                        metaKey: false
                    });
                    document.dispatchEvent(event);
                }

                var message_window_ctx = message_window_canvas.getContext('2d');
                // Canvasのサイズを設定
                message_window_canvas.width = message_window_canvas.offsetWidth;
                message_window_canvas.height = message_window_canvas.offsetHeight;

                let text_messages = [];
                let currentMessageIndex = 0;
                let enterFlag = false;
                var title_messages = ["恋愛面接", "～恋と内定の行方～"];
                message_window_ctx.fillStyle = "rgb(213, 67, 216)";

                // 各行の位置を計算
                var textHeight = 40; // フォントサイズに合わせて調整
                var lineHeight = textHeight + 10; // 行間を調整

                // テキストの幅を計算し、各行の中心位置を計算
                title_messages.forEach((title_message, index) => {
                    if (index === 0){
                        message_window_ctx.font = "80px SeoulNamsan";
                        var textMetrics = message_window_ctx.measureText(title_message);
                        var textWidth = textMetrics.width;                    
                        var x = 300 
                        var y = 330 - ((title_messages.length - 1) * lineHeight / 2) + (index * lineHeight) + textHeight / 2;
                    
                        message_window_ctx.fillText(title_message, x, y);
                    }
                    else if (index === 1){
                        message_window_ctx.font = "48px SeoulNamsan";
                        var textMetrics = message_window_ctx.measureText(title_message);
                        var textWidth = textMetrics.width;                    
                        var x = 300 - (textWidth / 8);
                        var y = 330 - ((title_messages.length - 1) * lineHeight / 2) + (index * lineHeight) + textHeight / 2;
                    
                        message_window_ctx.fillText(title_message, x, y);
                    }
                    
                });

                Item.prototype.change_message_window = function (scene_count) {
                    event.preventDefault();
                    // this._scene_count = scene_count;

                    if (scene_count === 1) {
                        message_window_ctx.clearRect(0, 0, 921, 519);

                        var message_window_img = new Image();
                        message_window_img.src = '<%= asset_path("/messagewindow_v2.png") %>';  // 背景画像のパスを指定
                        message_window_img.onload = function() {
                            message_window_ctx.drawImage(message_window_img, 201, 263);
                            fetchMessages()
                        }

                        document.addEventListener('keydown', function (event) {
                            if (event.key === 'Enter') {
                                enterFlag = !enterFlag;
                                currentMessageIndex++;
                                message_window_ctx.clearRect(0, 0, message_window_canvas.width, message_window_canvas.height);
                                message_window_ctx.drawImage(message_window_img, 201, 263);

                                if (currentMessageIndex < text_messages.length) {
                                    fetchMessages(text_messages[currentMessageIndex].name, text_messages[currentMessageIndex].message);
                                } else {
                                    console.log('No more messages.');
                                }
                                if (enterFlag) {
                                    simulateEnterKey();
                                }
                            }
                        });
                    }
                    else if (scene_count === 2) {
                    }
                    // エンディングへ
                    else if (scene_count === 3) {
                    }
                }
            }

            if (input_window_canvas) {
                var input_window_ctx = input_window_canvas.getContext('2d');

                // Canvasのサイズを設定
                input_window_canvas.width = input_window_canvas.offsetWidth;
                input_window_canvas.height = input_window_canvas.offsetHeight;

                Item.prototype.change_input_window = function (scene_count) {
                    event.preventDefault();
                    // this._scene_count = scene_count;

                    if (scene_count === 1) {
                        start_button.style.visibility = 'hidden';
                        input_button.style.visibility = 'visible';
                    }
                    else if (scene_count === 2) {
                        input_button.style.visibility = 'hidden';
                        input_txet.style.visibility = 'visible';
                    }
                    // エンディングへ
                    else if (scene_count === 3) {
                        input_txet.style.visibility = 'hidden';
                    }
                }
            }
        });
    </script>
</body>

</html>
